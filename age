#!/bin/bash -e
# age date-of-birth [format]
# date-of-birth formats:
#   CCYYMMDD
#   CCYY-MM-DD
#   "CCYYmmDD HH:MM:SS"
#   "CCYYmmDD HH:MM:SSTZ"  TZ +0100 or -0530 form
#
# 2016-03-09 based on elapsed seconds
# Yaswant Pradhan
# -----------------------------------------------------------------------------


# Settings --------------------------------------------------------------------
export TZ=Europe/London
birthday=${1:-20150417}
format=${2:-'%Y%m%d'}
if [[ "$OSTYPE" == darwin* ]]; then
    s1=$(date -jf "$format" "$birthday" +'%s')
else
    s1=$(date -d "$birthday" +'%s')
fi
s2=$(date +'%s')
sd=$((s2 - s1))
nyears=$(echo $sd|awk '{printf "%d",$1/3.154e+7}')
nmonths=$(echo $sd|awk '{printf "%d",$1/2.628e+6}')
rdays=$(echo $sd|awk '{printf "%d\n",($1/86400)%30.42}')


# Usage -----------------------------------------------------------------------
usage(){
less<<EOF

SYNOPSIS
    ${0##*/} DOB [format]

    - DOB format can take one of the following form
        CCYYMMDD (default)
        CCYY-MM-DD
        "CCYYmmDD HH:MM:SS"
        "CCYYmmDD HH:MM:SSTZ"  TZ +0100 or -0530 form

    - use format specification on POSIX systems.

DESCRIPTION
    Get Age from date of birth
EOF
}

# Print total age and breakdown
echo "$nyears years $((nmonths - nyears*12)) months $rdays days.";
echo -e "\n---- Breakdown ----"
printf "%0.2g years\n" "$(bc -l <<< $sd/31540000)"
printf "%0.4g months\n" "$(bc -l <<< $sd/2628000)"
printf "%0.4g weeks\n" "$(bc -l <<< $sd/604800)"
printf "%0.5g days\n" "$(bc -l <<< $sd/86400)"
printf "%0.0f hours\n" "$(bc -l <<< $sd/3600)"
printf "%0.0f minutes\n" "$(bc -l <<< $sd/60)"
printf "%0.0f seconds\n" "$sd"
echo -e "--------------------"

